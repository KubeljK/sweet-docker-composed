###########
# BUILDER #
###########

# Pull official base image
FROM python:3.8.0-alpine as builder

# Set work directory
WORKDIR /backend

# Set environment variables
# Prevents Python from writing pyc files to disc
ENV PYTHONDONTWRITEBYTECODE 1
# Prevents Python from buffering stdout and stder
ENV PYTHONUNBUFFERED 1

# Install psycopg2 and Pillow dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev \
    && apk add jpeg-dev zlib-dev libjpeg

# Install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /backend/wheels -r requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /backend/wheels -r requirements-prod.txt

#########
# FINAL #
#########

# Pull official base image
FROM python:3.8.0-alpine

# Create directory for the app user
RUN mkdir -p /home/klemen

# Create the app user
RUN addgroup -S klemen && adduser -S klemen -G klemen

# Create the appropriate directories
ENV HOME=/home/klemen
ENV APP_HOME=/home/klemen/backend
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Install dependencies
RUN apk update && apk add libpq
COPY --from=builder /backend/wheels /wheels
COPY --from=builder /backend/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER klemen

# run entrypoint.prod.sh
ENTRYPOINT ["/home/klemen/backend/entrypoint.prod.sh"]
